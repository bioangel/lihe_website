group 'lihe_website-backend'
version '1.0-SNAPSHOT'

project.ext {
    junitVersion = '4.12'
    assertjVersion = '3.5.2'

    //springBootVersion = '1.5.10.RELEASE'
    //springVersion = '4.3.14.RELEASE'
    //springDataRedisVersion = '1.8.10.RELEASE'

    springBootVersion = '2.0.0.RELEASE'
    springVersion = '5.0.4.RELEASE'
    springDataRedisVersion = '2.0.5.RELEASE'

    assertjVersion = '3.5.2'
    flywayVersion = '3.2.1'
    mybatisVersion = '3.4.6'
    mybatisSpringVersion = '1.3.2'

    tomcatJdbcPoolVersion = '8.5.8'
    mariaVersion = '2.2.3'

    logbackVersion = '1.2.3'
    aspectjVersiion = '1.8.13'
    slf4jVersion = '1.7.25'
    flywayVersion = '4.2.0'

    apacheCommonLang3Version = '3.7'
    jacksonVersion = '2.9.4'
    guavaVersion = '12.0.1'

    env = System.getProperty('env', 'local')
}

ext {
    skipPackage = System.getProperty('skip', 'no')
    testPackage = System.getProperty('retain', 'no')
    environmentPah = "envs/$env"
}

buildscript {
    ext {
        springBootPlugin = '2.0.0.RELEASE'
    }
    repositories {
        mavenLocal()
        maven{url 'http://maven.aliyun.com/nexus/content/groups/public'}
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootPlugin")
    }
}

allprojects {
    repositories {
        mavenLocal()
        maven{url 'http://maven.aliyun.com/nexus/content/groups/public'}
    }

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'
    apply plugin: 'io.spring.dependency-management'

    tasks.withType(JavaCompile) {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.encoding = 'UTF-8'
    }

    checkstyle {
        toolVersion = "6.7"
        configFile = new File(project(":").projectDir, "checkstyle.xml")
    }

}

subprojects {
    repositories {
        mavenLocal()
        maven{url 'http://maven.aliyun.com/nexus/content/groups/public'}
    }

    configurations.all {
        resolutionStrategy {
            failOnVersionConflict()
        }
    }
}

idea {
    project {
        languageLevel = '1.8'
        jdkName = '1.8'

        ipr {
            withXml { provider ->
                provider.node.component
                        .find { it.@name == 'VcsDirectoryMappings' }
                        .mapping.@vcs = 'Git'
            }
        }
    }
}

