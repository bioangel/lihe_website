<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhp.authority.dao.AuthAccountMapper">
    <resultMap id="BaseResultMap" type="com.zhp.authority.model.AuthAccount">
        <id column="uuid" property="uuid" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
        <result column="enable" property="enable" jdbcType="BIT"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="registerTime" property="registertime" jdbcType="TIMESTAMP"/>
        <result column="organizationId" property="organizationid" jdbcType="VARCHAR"/>
        <result column="nickName" property="nickname" jdbcType="VARCHAR"/>
        <result column="realName" property="realname" jdbcType="VARCHAR"/>
        <result column="sexId" property="sexid" jdbcType="INTEGER"/>
        <result column="userType" property="usertype" jdbcType="INTEGER"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="loginCount" property="logincount" jdbcType="INTEGER"/>
        <result column="user_pic" property="userPic" jdbcType="VARCHAR"/>
        <result column="roleId" property="roleId" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="accountRoleMap" type="com.zhp.authority.model.AccountRole">
        <result column="uuid" property="uuid" jdbcType="VARCHAR"/>
        <result column="nickName" property="nickName" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="organization" property="organization" jdbcType="VARCHAR"/>
        <result column="rid" property="rid" jdbcType="VARCHAR"/>
        <result column="rname" property="rname" jdbcType="VARCHAR"/>
        <result column="rflag" property="rflag" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
    uuid, version, enable, email, username, password, registerTime, organizationId,
    nickName, realName, sexId, userType, phone, loginCount, user_pic
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from auth_account
        where uuid = #{id,jdbcType=VARCHAR}
    </select>

    <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
    select a.uuid,a.username,a.password,b.role_id roleId from
      auth_account a, auth_role_account b, auth_role c
    where a.username = #{username,jdbcType=VARCHAR}
      and a.uuid = b.account_uuid
      and b.role_id = c.id
      and a.enable = 1
      and c.enable = 1
  </select>

    <select id="selectSameOryByUsername" resultType="java.lang.String" parameterType="java.lang.String">
        select a.username from auth_account a, auth_role_account b
        WHERE a.uuid = b.account_uuid and b.role_id = "solveLeader" and a.enable = 1 and
        organizationId regexp replace((SELECT organizationId FROM auth_account WHERE username = #{username,jdbcType=VARCHAR}),',','|');
    </select>

    <select id="selectByRoleId" resultMap="BaseResultMap" parameterType="java.lang.String">
    select a.uuid from
      auth_account a, auth_role_account b, auth_role c
    where c.id = #{rid,jdbcType=VARCHAR}
    and a.uuid = b.account_uuid
    and b.role_id = c.id
    and a.uuid != 'clr'
    and a.enable = 1
    and c.enable = 1
  </select>

    <select id="selectByUid" resultMap="BaseResultMap" parameterType="java.lang.String">
    select a.uuid,a.username,a.password,b.role_id roleId from
      auth_account a, auth_role_account b, auth_role c
    where a.uuid = #{uid,jdbcType=VARCHAR}
      and a.uuid = b.account_uuid
      and b.role_id = c.id
      and a.enable = 1
      and c.enable = 1
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from auth_account
    where uuid = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.zhp.authority.model.AuthAccount">
        insert into auth_account (<include refid="Base_Column_List"/>)
        values (#{uuid,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, #{enable,jdbcType=BIT},
        #{email,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR}, #{registertime,jdbcType=TIMESTAMP},
        #{organizationid,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},
        #{realname,jdbcType=VARCHAR}, #{sexid,jdbcType=INTEGER}, #{usertype,jdbcType=INTEGER},
        #{phone,jdbcType=VARCHAR}, #{logincount,jdbcType=INTEGER},
        #{userPic,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.zhp.authority.model.AuthAccount">
        insert into auth_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uuid != null">
                uuid,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="enable != null">
                enable,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="registertime != null">
                registerTime,
            </if>
            <if test="organizationid != null">
                organizationId,
            </if>
            <if test="nickname != null">
                nickName,
            </if>
            <if test="realname != null">
                realName,
            </if>
            <if test="sexid != null">
                sexId,
            </if>
            <if test="usertype != null">
                userType,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="logincount != null">
                loginCount,
            </if>
            <if test="userPic != null">
                user_pic,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uuid != null">
                #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
            <if test="enable != null">
                #{enable,jdbcType=BIT},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="registertime != null">
                #{registertime,jdbcType=TIMESTAMP},
            </if>
            <if test="organizationid != null">
                #{organizationid,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="realname != null">
                #{realname,jdbcType=VARCHAR},
            </if>
            <if test="sexid != null">
                #{sexid,jdbcType=INTEGER},
            </if>
            <if test="usertype != null">
                #{usertype,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="logincount != null">
                #{logincount,jdbcType=INTEGER},
            </if>
            <if test="userPic != null">
                #{userPic,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.zhp.authority.model.AuthAccount">
        update auth_account
        <set>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
            <if test="enable != null">
                enable = #{enable,jdbcType=BIT},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="registertime != null">
                registerTime = #{registertime,jdbcType=TIMESTAMP},
            </if>
            <if test="organizationid != null">
                organizationId = #{organizationid,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickName = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="realname != null">
                realName = #{realname,jdbcType=VARCHAR},
            </if>
            <if test="sexid != null">
                sexId = #{sexid,jdbcType=INTEGER},
            </if>
            <if test="usertype != null">
                userType = #{usertype,jdbcType=INTEGER},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="logincount != null">
                loginCount = #{logincount,jdbcType=INTEGER},
            </if>
            <if test="userPic != null">
                user_pic = #{userPic,jdbcType=VARCHAR},
            </if>
        </set>
        where uuid = #{uuid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zhp.authority.model.AuthAccount">
    update auth_account
    set version = #{version,jdbcType=INTEGER},
      enable = #{enable,jdbcType=BIT},
      email = #{email,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      registerTime = #{registertime,jdbcType=TIMESTAMP},
      organizationId = #{organizationid,jdbcType=VARCHAR},
      nickName = #{nickname,jdbcType=VARCHAR},
      realName = #{realname,jdbcType=VARCHAR},
      sexId = #{sexid,jdbcType=INTEGER},
      userType = #{usertype,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      loginCount = #{logincount,jdbcType=INTEGER},
      user_pic = #{userPic,jdbcType=VARCHAR},
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>

    <select id="selectAccountRole" resultMap="accountRoleMap">
    select  a.uuid,a.nickName,a.email,a.username, org.name organization ,b.role_id as rid,
      c.`name` as rname , IFNULL(c.`enable`,2) as rflag
    from  auth_account a LEFT JOIN auth_organization org on a.organizationId=org.id
      left join auth_role_account b on
        a.uuid = b.account_uuid LEFT JOIN auth_role c on b.role_id=c.id
  </select>

    <delete id="deleteAccountRoleById">
        delete from auth_role_account
        where account_uuid in
        <foreach collection="uidList" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="deleteAccountById">
        delete from auth_account
        where uuid in
        <foreach collection="uidList" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>
</mapper>